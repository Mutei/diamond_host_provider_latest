plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace "com.example.daimond_host_provider"
    compileSdk 34 // Update if necessary
    ndkVersion "21.1.6352462" // Replace if you need a different NDK version

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    defaultConfig {
        applicationId "com.diamond_booking"
        minSdkVersion 25
        targetSdkVersion 34 // Update if needed
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
//        debug {
//            buildConfigField "String", "GOOGLE_MAPS_API_KEY", "\"${project.ext.googleMapsApiKey}\""
//        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled false // Set to true if you want to enable code shrinking
            shrinkResources false // Set to true only if minifyEnabled is true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }


    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

flutter {
    source "../.."
}

dependencies {
    implementation 'androidx.browser:browser:1.3.0'
    implementation 'com.google.android.gms:play-services-auth:19.0.0'
    implementation platform('com.google.firebase:firebase-bom:32.8.1')
    // Add other dependencies here if required
}

apply plugin: 'com.google.gms.google-services'
