plugins {
    // Order matters: Android first, then Kotlin, then Flutter, then Google services
    id "com.android.application"
    id "org.jetbrains.kotlin.android"
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader -> localProperties.load(reader) }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode') ?: '1'
def flutterVersionName = localProperties.getProperty('flutter.versionName') ?: '1.0'

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace "com.example.daimond_host_provider"

    // Modern SDK levels
    compileSdk 36

    defaultConfig {
        applicationId "com.diamond_booking"
        minSdkVersion 25
        targetSdkVersion 36
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    // AGP 8.x requires JDK 17
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
        coreLibraryDesugaringEnabled true
    }
    kotlinOptions {
        jvmTarget = "17"
    }

    // NDK (optional; keep if you need it)
//    ndkVersion "26.1.10909125"

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        // debug { }
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

flutter {
    source "../.."
}

dependencies {
    // Keep your existing deps (bump later if needed)
    implementation 'androidx.browser:browser:1.3.0'
    implementation 'com.google.android.gms:play-services-auth:19.0.0'

    // Firebase via BoM
    implementation platform('com.google.firebase:firebase-bom:32.8.1')
    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:2.1.2"
    // e.g.:
    // implementation 'com.google.firebase:firebase-analytics'
}
